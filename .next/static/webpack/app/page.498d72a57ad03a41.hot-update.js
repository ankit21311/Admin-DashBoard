"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/firebase.ts":
/*!*****************************!*\
  !*** ./src/lib/firebase.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analytics: function() { return /* binding */ analytics; },\n/* harmony export */   auth: function() { return /* binding */ auth; },\n/* harmony export */   createUserDocument: function() { return /* binding */ createUserDocument; },\n/* harmony export */   createUserDocumentBackground: function() { return /* binding */ createUserDocumentBackground; },\n/* harmony export */   db: function() { return /* binding */ db; },\n/* harmony export */   getUserDocument: function() { return /* binding */ getUserDocument; },\n/* harmony export */   logout: function() { return /* binding */ logout; },\n/* harmony export */   onAuthStateChange: function() { return /* binding */ onAuthStateChange; },\n/* harmony export */   signInWithEmail: function() { return /* binding */ signInWithEmail; },\n/* harmony export */   signInWithGoogle: function() { return /* binding */ signInWithGoogle; },\n/* harmony export */   signUpWithEmail: function() { return /* binding */ signUpWithEmail; },\n/* harmony export */   updateUserDocument: function() { return /* binding */ updateUserDocument; }\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"(app-pages-browser)/./node_modules/firebase/app/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/auth */ \"(app-pages-browser)/./node_modules/firebase/auth/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_analytics__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/analytics */ \"(app-pages-browser)/./node_modules/firebase/analytics/dist/esm/index.esm.js\");\n\n\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCNVG8q_TbpD9ivyrFqpMdxdHdlhlDPlyU\",\n    authDomain: \"admin-dashboard-463118.firebaseapp.com\",\n    projectId: \"admin-dashboard-463118\",\n    storageBucket: \"admin-dashboard-463118.firebasestorage.app\",\n    messagingSenderId: \"382608183550\",\n    appId: \"1:382608183550:web:415eac69572cafe29355af\",\n    measurementId: \"G-68LT5S5MXK\"\n};\n// Initialize Firebase\nconst app = (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length === 0 ? (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig) : (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApp)();\nconst auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.getAuth)(app);\nconst db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getFirestore)(app);\n// Optimize auth settings for better performance\nif (true) {\n    // Set auth language to user's preferred language for faster loading\n    auth.languageCode = navigator.language || \"en\";\n    // Enable network optimizations\n    auth.settings.appVerificationDisabledForTesting = false;\n}\n// Initialize Analytics (only in browser environment)\nlet analytics;\nif (true) {\n    (0,firebase_analytics__WEBPACK_IMPORTED_MODULE_3__.isSupported)().then((supported)=>{\n        if (supported) {\n            analytics = (0,firebase_analytics__WEBPACK_IMPORTED_MODULE_3__.getAnalytics)(app);\n        }\n    }).catch(()=>{\n        // Ignore analytics errors to prevent affecting auth performance\n        console.log(\"Analytics initialization skipped\");\n    });\n}\n// Google Auth Provider with optimized configuration\nconst googleProvider = new firebase_auth__WEBPACK_IMPORTED_MODULE_1__.GoogleAuthProvider();\n// Only request essential scopes for faster sign-in\ngoogleProvider.addScope(\"email\");\ngoogleProvider.addScope(\"profile\");\n// Remove prompt parameter to allow faster re-authentication for returning users\n// googleProvider.setCustomParameters({\n//     prompt: 'select_account'\n// });\n// Auth functions\nconst signInWithGoogle = async ()=>{\n    try {\n        console.log(\"Starting Google sign-in...\");\n        const result = await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.signInWithPopup)(auth, googleProvider);\n        console.log(\"Google sign-in successful:\", result.user.email);\n        // Return immediately - no background operations\n        return result;\n    } catch (error) {\n        console.error(\"Google sign-in error:\", error);\n        throw error;\n    }\n};\nconst signInWithEmail = async (email, password)=>{\n    try {\n        console.log(\"Starting email sign-in...\");\n        const result = await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.signInWithEmailAndPassword)(auth, email, password);\n        console.log(\"Email sign-in successful:\", result.user.email);\n        // Return immediately - no background operations\n        return result;\n    } catch (error) {\n        console.error(\"Email sign-in error:\", error);\n        throw error;\n    }\n};\nconst signUpWithEmail = async (email, password, displayName)=>{\n    try {\n        console.log(\"Starting email sign-up...\");\n        const userCredential = await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.createUserWithEmailAndPassword)(auth, email, password);\n        const user = userCredential.user;\n        // Update user profile\n        await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.updateProfile)(user, {\n            displayName\n        });\n        console.log(\"Email sign-up successful:\", user.email);\n        return userCredential;\n    } catch (error) {\n        console.error(\"Email sign-up error:\", error);\n        throw error;\n    }\n};\nconst logout = ()=>(0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.signOut)(auth);\nconst onAuthStateChange = (callback)=>(0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.onAuthStateChanged)(auth, callback);\n// Firestore functions for user data with error handling\nconst createUserDocument = async function(user) {\n    let additionalData = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    if (!user) return;\n    try {\n        const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"users\", user.uid);\n        const userSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(userRef);\n        if (!userSnap.exists()) {\n            const { displayName, email, photoURL } = user;\n            const createdAt = new Date();\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.setDoc)(userRef, {\n                displayName,\n                email,\n                photoURL,\n                createdAt,\n                lastLoginAt: createdAt,\n                role: determineUserRole(email || \"\"),\n                ...additionalData\n            });\n            console.log(\"User document created successfully\");\n        } else {\n            // Update last login time\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(userRef, {\n                lastLoginAt: new Date()\n            });\n            console.log(\"User document updated successfully\");\n        }\n        return userRef;\n    } catch (error) {\n        console.error(\"Firestore operation failed:\", error);\n        // Don't throw error - allow authentication to continue without Firestore\n        return null;\n    }\n};\n// Background Firestore operations (non-blocking)\nconst createUserDocumentBackground = function(user) {\n    let additionalData = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    if (!user) return;\n    // Run in background without blocking authentication\n    setTimeout(async ()=>{\n        try {\n            await createUserDocument(user, additionalData);\n        } catch (error) {\n            console.warn(\"Background Firestore operation failed:\", error);\n        }\n    }, 100); // Small delay to ensure authentication completes first\n};\nconst getUserDocument = async (uid)=>{\n    if (!uid) return null;\n    try {\n        const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"users\", uid);\n        const userSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(userRef);\n        if (userSnap.exists()) {\n            console.log(\"User document fetched successfully\");\n            return {\n                id: userSnap.id,\n                ...userSnap.data()\n            };\n        }\n    } catch (error) {\n        console.error(\"Error getting user document:\", error);\n    // Return null instead of throwing - allow app to continue\n    }\n    return null;\n};\nconst updateUserDocument = async (uid, data)=>{\n    if (!uid) return;\n    try {\n        const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, \"users\", uid);\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.updateDoc)(userRef, {\n            ...data,\n            updatedAt: new Date()\n        });\n        console.log(\"User document updated successfully\");\n    } catch (error) {\n        console.error(\"Error updating user document:\", error);\n        throw error; // Throw for profile updates since user expects feedback\n    }\n};\n// Determine user role based on email\nconst determineUserRole = (email)=>{\n    const adminEmails = [\n        \"admin@example.com\",\n        \"admin@gmail.com\"\n    ];\n    return adminEmails.includes(email.toLowerCase()) ? \"admin\" : \"user\";\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (app);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/firebase.ts\n"));

/***/ })

});