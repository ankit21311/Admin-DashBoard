"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/contexts/AuthContext.tsx":
/*!**************************************!*\
  !*** ./src/contexts/AuthContext.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: function() { return /* binding */ AuthProvider; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_firebase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/firebase */ \"(app-pages-browser)/./src/lib/firebase.ts\");\n/* __next_internal_client_entry_do_not_use__ useAuth,AuthProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    user: null,\n    loading: true,\n    refreshUserData: async ()=>{},\n    signInDemo: ()=>{},\n    signOut: ()=>{}\n});\nconst useAuth = ()=>{\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (!context) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst AuthProvider = (param)=>{\n    let { children } = param;\n    _s1();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const determineUserRole = (email)=>{\n        // Define admin emails - Add your Google account email here\n        const adminEmails = [\n            \"admin@example.com\",\n            \"admin@gmail.com\",\n            \"your-admin-email@gmail.com\"\n        ];\n        return adminEmails.includes(email.toLowerCase()) ? \"admin\" : \"user\";\n    };\n    const createUserWithRole = (firebaseUser)=>{\n        var _firebaseUser_email;\n        const role = determineUserRole(firebaseUser.email || \"\");\n        const userData = {\n            id: firebaseUser.uid,\n            displayName: firebaseUser.displayName || ((_firebaseUser_email = firebaseUser.email) === null || _firebaseUser_email === void 0 ? void 0 : _firebaseUser_email.split(\"@\")[0]) || \"\",\n            email: firebaseUser.email || \"\",\n            photoURL: firebaseUser.photoURL || \"\",\n            role,\n            createdAt: new Date(),\n            lastLoginAt: new Date()\n        };\n        return {\n            ...firebaseUser,\n            role,\n            userData\n        };\n    };\n    const createDemoUser = (type)=>{\n        const demoData = {\n            admin: {\n                uid: \"demo-admin-uid\",\n                email: \"admin@example.com\",\n                displayName: \"Demo Admin\",\n                photoURL: undefined\n            },\n            user: {\n                uid: \"demo-user-uid\",\n                email: \"user@example.com\",\n                displayName: \"Demo User\",\n                photoURL: undefined\n            }\n        };\n        const demo = demoData[type];\n        const userData = {\n            id: demo.uid,\n            displayName: demo.displayName,\n            email: demo.email,\n            photoURL: demo.photoURL,\n            role: type,\n            createdAt: new Date(),\n            lastLoginAt: new Date()\n        };\n        return {\n            uid: demo.uid,\n            email: demo.email,\n            displayName: demo.displayName,\n            photoURL: demo.photoURL,\n            emailVerified: true,\n            isAnonymous: false,\n            metadata: {\n                creationTime: new Date().toISOString(),\n                lastSignInTime: new Date().toISOString()\n            },\n            providerData: [],\n            refreshToken: \"demo-refresh-token\",\n            tenantId: null,\n            delete: async ()=>{},\n            getIdToken: async ()=>\"demo-id-token\",\n            getIdTokenResult: async ()=>({}),\n            reload: async ()=>{},\n            toJSON: ()=>({}),\n            role: type,\n            userData,\n            isDemo: true\n        };\n    };\n    const signInDemo = (type)=>{\n        console.log(\"Signing in as demo \".concat(type));\n        const demoUser = createDemoUser(type);\n        setUser(demoUser);\n        setLoading(false);\n        // Store demo session in localStorage\n        localStorage.setItem(\"demoUser\", JSON.stringify({\n            type,\n            timestamp: new Date().toISOString()\n        }));\n    };\n    const signOut = ()=>{\n        console.log(\"Signing out\");\n        setUser(null);\n        localStorage.removeItem(\"demoUser\");\n    };\n    const refreshUserData = async ()=>{\n        if (user && !user.isDemo) {\n            const updatedUser = createUserWithRole(user);\n            setUser(updatedUser);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"Setting up auth state listener...\");\n        // Check for demo user session first\n        const demoSession = localStorage.getItem(\"demoUser\");\n        if (demoSession) {\n            try {\n                const { type, timestamp } = JSON.parse(demoSession);\n                const sessionAge = new Date().getTime() - new Date(timestamp).getTime();\n                const maxAge = 24 * 60 * 60 * 1000; // 24 hours\n                if (sessionAge < maxAge) {\n                    console.log(\"Restoring demo \".concat(type, \" session\"));\n                    const demoUser = createDemoUser(type);\n                    setUser(demoUser);\n                    setLoading(false);\n                    return;\n                } else {\n                    // Session expired\n                    localStorage.removeItem(\"demoUser\");\n                }\n            } catch (error) {\n                console.error(\"Error parsing demo session:\", error);\n                localStorage.removeItem(\"demoUser\");\n            }\n        }\n        // Set up Firebase auth listener\n        const unsubscribe = (0,_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.onAuthStateChange)((firebaseUser)=>{\n            try {\n                if (firebaseUser) {\n                    console.log(\"User signed in:\", firebaseUser.email);\n                    const userWithRole = createUserWithRole(firebaseUser);\n                    setUser(userWithRole);\n                    console.log(\"User data loaded successfully for:\", firebaseUser.email);\n                    // Clear any demo session when real user signs in\n                    localStorage.removeItem(\"demoUser\");\n                } else {\n                    console.log(\"User signed out\");\n                    // Only set to null if no demo session exists\n                    if (!localStorage.getItem(\"demoUser\")) {\n                        setUser(null);\n                    }\n                }\n            } catch (error) {\n                console.error(\"Auth state change error:\", error);\n                if (!localStorage.getItem(\"demoUser\")) {\n                    setUser(null);\n                }\n            } finally{\n                if (!localStorage.getItem(\"demoUser\")) {\n                    setLoading(false);\n                }\n            }\n        });\n        return unsubscribe;\n    }, []);\n    const value = {\n        user,\n        loading,\n        refreshUserData,\n        signInDemo,\n        signOut\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\ankit\\\\WebstormProjects\\\\Admin-DashBoard\\\\src\\\\contexts\\\\AuthContext.tsx\",\n        lineNumber: 243,\n        columnNumber: 9\n    }, undefined);\n};\n_s1(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/contexts/AuthContext.tsx\n"));

/***/ })

});